PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}, int v]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, AssignmentStatement{id='v', exp=10}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapAllocationStatement{expression=22, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}, HeapWritingStatement{heapVarName='a', expression=30}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=, 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=22}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}, AssignmentStatement{id='v', exp=32}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[PrintStatement{expression=heapReadingExpression{expression=a}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=10}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=int v, tail=CompStatement{head=Ref(int) a, tail=CompStatement{head=AssignmentStatement{id='v', exp=10}, tail=CompStatement{head=HeapAllocationStatement{expression=22, variable_name='a'}, tail=CompStatement{head=ForkStatement{statement=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}PrgState for thread number 2 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, v=32}}, 
	out=10 30 32 30 , 
	originalProgram=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=30}, tail=CompStatement{head=AssignmentStatement{id='v', exp=32}, tail=CompStatement{head=PrintStatement{expression=v}, tail=PrintStatement{expression=heapReadingExpression{expression=a}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=30}}
}