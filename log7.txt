PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}, Ref(int) b]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}, Ref(int) b]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}, Ref(int) b]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}, int v]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}, int v]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}, int v]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}, HeapAllocationStatement{expression=0, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}, HeapAllocationStatement{expression=0, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}, HeapAllocationStatement{expression=0, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}, HeapAllocationStatement{expression=0, variable_name='b'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}, HeapAllocationStatement{expression=0, variable_name='b'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}, HeapAllocationStatement{expression=0, variable_name='b'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}, HeapWritingStatement{heapVarName='a', expression=1}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}, HeapWritingStatement{heapVarName='a', expression=1}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}, HeapWritingStatement{heapVarName='a', expression=1}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}, HeapWritingStatement{heapVarName='b', expression=2}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}, HeapWritingStatement{heapVarName='b', expression=2}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}, HeapWritingStatement{heapVarName='b', expression=2}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, if(heapReadingExpression{expression=a} < heapReadingExpression{expression=b}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, if(heapReadingExpression{expression=a} < heapReadingExpression{expression=b}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, if(heapReadingExpression{expression=a} < heapReadingExpression{expression=b}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, AssignmentStatement{id='v', exp=100}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, AssignmentStatement{id='v', exp=100}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, AssignmentStatement{id='v', exp=100}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, if(heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, if(heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, if(heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, AssignmentStatement{id='v', exp=200}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, AssignmentStatement{id='v', exp=200}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, AssignmentStatement{id='v', exp=200}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 200 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 200 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}, Ref(int) a]}, 
	symTable=MyDictionary{map={}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}, Ref(int) b]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}, Ref(int) b]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}, Ref(int) b]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}, int v]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}, int v]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}, int v]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}, HeapAllocationStatement{expression=0, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}, HeapAllocationStatement{expression=0, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}, HeapAllocationStatement{expression=0, variable_name='a'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=0, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}, HeapAllocationStatement{expression=0, variable_name='b'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}, HeapAllocationStatement{expression=0, variable_name='b'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}, HeapAllocationStatement{expression=0, variable_name='b'}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=0, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}, HeapWritingStatement{heapVarName='a', expression=1}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}, HeapWritingStatement{heapVarName='a', expression=1}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}, HeapWritingStatement{heapVarName='a', expression=1}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=0, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}, HeapWritingStatement{heapVarName='b', expression=2}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}, HeapWritingStatement{heapVarName='b', expression=2}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}, HeapWritingStatement{heapVarName='b', expression=2}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=0}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, if(heapReadingExpression{expression=a} < heapReadingExpression{expression=b}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, if(heapReadingExpression{expression=a} < heapReadingExpression{expression=b}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, if(heapReadingExpression{expression=a} < heapReadingExpression{expression=b}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, AssignmentStatement{id='v', exp=100}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, AssignmentStatement{id='v', exp=100}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}, AssignmentStatement{id='v', exp=100}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=0}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}, PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=, 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, if(heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, if(heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, if(heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}) then(AssignmentStatement{id='v', exp=100}) else(AssignmentStatement{id='v', exp=200})]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, AssignmentStatement{id='v', exp=200}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, AssignmentStatement{id='v', exp=200}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}, AssignmentStatement{id='v', exp=200}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=100}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[PrintStatement{expression=v}]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 200 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}PrgState for thread number 1 {
	exeStack=MyStack{stack=[]}, 
	symTable=MyDictionary{map={a=RefValue{address=1, locationType=int}, b=RefValue{address=2, locationType=int}, v=200}}, 
	out=100 200 , 
	originalProgram=CompStatement{head=Ref(int) a, tail=CompStatement{head=Ref(int) b, tail=CompStatement{head=int v, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='a'}, tail=CompStatement{head=HeapAllocationStatement{expression=0, variable_name='b'}, tail=CompStatement{head=HeapWritingStatement{heapVarName='a', expression=1}, tail=CompStatement{head=HeapWritingStatement{heapVarName='b', expression=2}, tail=CompStatement{head=v=heapReadingExpression{expression=a} < heapReadingExpression{expression=b}?100:200, tail=CompStatement{head=PrintStatement{expression=v}, tail=CompStatement{head=v=heapReadingExpression{expression=b} - 2 > heapReadingExpression{expression=a}?100:200, tail=PrintStatement{expression=v}}}}}}}}}}}, 
	fileTable=MyDictionary{map={}}, 
	heap =MyHeap{heap={1=1, 2=2}}
}